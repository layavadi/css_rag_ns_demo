name: Cloudera Semantic Search RAG Demo with Neural search pipeline
description: |
    This is RAG demo using Cloudera Semantic search for vectore store for embeddings and running the embedding model with in CSS.

author: Cloudera Inc.
specification_version: 1.0
prototype_version: 1.0
date: "2024-10-09"

environment_variables:
  CSS_OPENAI_KEY:
    default: abcdefg
    description: >-
      The OpenAI access key secret for the LLM API call, deployed in Azure
  CSS_OPENAI_VERSION:
    default: abcdefg
    description: >-
      The OpenAI Model version  for the LLM API call, deployed in Azure
  CSS_OPENAI_MODEL:
    default: gpt3.5
    description: >-
      The OpenAI model id for  the LLM API call, deployed in Azure
  CSS_OPENAI_ENDPOINT:
    default: gpt3.5
    description: >-
      The OpenAI model end point  for  the LLM API call, deployed in Azure
  CSS_USER:
    default: admin
    descriptiom: >-
      The CSS databse user
  CSS_PASSWORD:
    default: admin
    description: >-
      The CSS database user password
  CSS_HOST:
    default: localhost
    description: >-
      Host where CSS is running
  CSS_PORT:
    default: '9200'
    description: >-
      Port where CSS service is listening
  CSS_SSL:
    default: 'True'
    description: >-
      Enable SSL while connecting to CSS
  DATA_FILE_PATH:
    default: './data'
    description: >-
      PDF files for loading it into the CSS

runtimes:
  - editor: PBJ Workbench
    kernel: Python 3.10

tasks:

  - type: run_session
    name: Install Dependencies
    script: session-install-deps/install_dependencies.py
    short_summary: Install Dependencies
    kernel: python3
    cpu: 2
    memory: 4

  - type: create_job
    name: Load Data From PDF File
    entity_label: create_index_and_load_data
    script: css_load.py
    short_summary: Create job to load data into CSS. 
    long_summary: Create job to create index, model and pipelin. Load pdf files located by the DOC_PATH. 
    cpu: 2
    memory: 4
    environment:
      TASK_TYPE: CREATE/RUN_JOB

  - type: create_job
    name: Cleanup Inde  pipeline and Model
    entity_label: cleanup_model_index_pipeline
    script: cleanup.py
    short_summary: Job to cleanup all the data. 
    long_summary: Delete Index, pipeline and Model created during the demo 
    cpu: 2
    memory: 4
    environment:
      TASK_TYPE: CREATE/RUN_JOB
    

  - type: start_application
    name: RAG search front end
    script: search_app.py
    short_summary: Start the RAG Demo UI
    long_summary: Start the RAG Demo UI
    cpu: 2
    memory: 4
    gpu: 0
